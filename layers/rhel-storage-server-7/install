#!/bin/bash -e

. utils/functions

LAYER=$(basename $(dirname $0))

ISO=isos/rhel-server-7.1-x86_64-dvd.iso
if [ ! -e $ISO ]; then
  echo "$0: please download $(basename $ISO) and place it in $ISO"
  exit 1
fi

read_config $LAYER

stop() {
  rm -rf $TEMPDIR
}

trap stop EXIT
TEMPDIR=$(mktemp -d)

for FILE in initrd.img vmlinuz; do
  iso-read -i $ISO -e isolinux/$FILE -o $TEMPDIR/$FILE
done

qemu-img create -q -f qcow2 -o compat=0.10 tmp/$LAYER.qcow2 ${LAYER_DISK}G
utils/sigwrap $QEMUKVM -nodefaults \
  -cpu host \
  -smp $BUILD_CPUS \
  -m $BUILD_MEM \
  -kernel $TEMPDIR/vmlinuz \
  -initrd $TEMPDIR/initrd.img \
  -append "ks=http://$APILISTENER/static/$(dirname $0)/install.ks APILISTENER=$APILISTENER LAYER=$LAYER console=ttyS0,115200n8" \
  -device virtio-scsi-pci \
  -drive discard=unmap,file=tmp/$LAYER.qcow2,id=disk1,if=none,cache=unsafe \
  -device scsi-disk,drive=disk1 \
  -net bridge,br=$BUILD_BRIDGE \
  -net nic,model=virtio,macaddr=$(utils/random-mac.py) \
  -cdrom $ISO \
  -display none \
  -serial file:/proc/self/fd/2

mv tmp/$LAYER.qcow2 build/$LAYER.qcow2
